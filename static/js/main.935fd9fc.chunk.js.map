{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/vector.svg"],"names":["Header","_","className","src","logo","alt","CurrentUserContext","createContext","Card","link","likes","name","idCard","onCardClick","onCardLike","onCardDelete","cardOwner","currentUser","useContext","isOwn","_id","isLiked","some","like","cardLikeButtonClassName","cardDeleteButtonClassName","onClick","type","length","Main","onEditAvatar","onAddPlace","onEditProfile","cards","onCardsLike","onCardsDelete","about","avatar","map","card","key","owner","Footer","PopupWithForm","title","children","textButton","onClose","isOpen","onSubmit","action","noValidate","ImagePopup","status","api","options","this","_serverUrl","url","_headers","headers","cardsUrl","fetch","method","then","_errorCheck","data","body","JSON","stringify","id","checkCard","res","ok","json","Promise","reject","authorization","EditProfilePopup","onUpdateUser","useState","userName","setName","description","setDescription","useEffect","evt","preventDefault","placeholder","required","minLength","maxLength","value","onChange","targetName","target","targetAbout","EditAvatarPopup","onUpdateAvatar","urlRef","useRef","current","ref","AddPlacePopup","onCardAdd","cardName","setCardName","cardLink","setCardLink","cardNameValue","cardLinkValue","App","isEditProfilePopupOpen","setProfileStatus","isAddPlacePopupOpen","setPlaceStatus","isEditAvatarPopupOpen","setAvatarStatus","isConfirmPopupOpen","setConfirmStatus","selectedCard","setSelectedCard","setCurrentUser","currentCardId","setCurrentCardId","setCards","getProfileInformation","userData","catch","err","console","log","getInitialCards","dataCard","closeAllPopups","Provider","changeLikeCardStatus","newCard","newCards","singleCard","cardId","updateUserInformation","UserData","addNewCard","updateUserAvatar","removeCard","newCardList","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.935fd9fc.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/vector.svg';\n\nconst Header = _ => {\n  return (\n    <header className=\"header page__header\">\n      <img src={logo} alt=\"Логотип место Россия\" className=\"header__logo\" />\n    </header>\n  );\n};\nexport default Header;\n","import { createContext } from 'react';\n\nexport const CurrentUserContext = createContext();\n","import React, { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nconst Card = ({\n  link,\n  likes,\n  name,\n  idCard,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n  cardOwner,\n}) => {\n  //Подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки и есть ли лайки владельца у карточек\n  const isOwn = cardOwner === currentUser._id;\n  const isLiked = likes.some(like => like._id === currentUser._id);\n\n  // Создаём переменную для класса карзины и лайка\n  const cardLikeButtonClassName = `elements__like ${\n    isLiked ? 'elements__like_active' : ''\n  }`;\n  const cardDeleteButtonClassName = `elements__trash ${\n    isOwn ? '' : 'elements__trash_display_none'\n  }`;\n\n  //Функция открытия картинки по клику\n  const handleCardClick = _ => {\n    onCardClick({ link, name });\n  };\n\n  //Лайк по клику\n  const handleLikeClick = _ => {\n    onCardLike({ likes, idCard });\n  };\n\n  //Удаление карточки по клику\n  const handleCardDelete = _ => {\n    onCardDelete(idCard);\n  };\n\n  return (\n    <>\n      <li className=\"elements__item\">\n        <button\n          className={cardDeleteButtonClassName}\n          onClick={handleCardDelete}\n          type=\"button\"\n        />\n        <figure className=\"elements__item-card\">\n          <img\n            onClick={handleCardClick}\n            src={link}\n            alt={name}\n            className=\"elements__image\"\n          />\n          <figcaption className=\"elements__image-content-box\">\n            <p className=\"elements__image-description\">{name}</p>\n            <div className=\"elements__like-button-box\">\n              <button\n                className={cardLikeButtonClassName}\n                onClick={handleLikeClick}\n              />\n              <span className=\"elements__like-counter\">\n                {likes.length >= 1 ? likes.length : ''}\n              </span>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n    </>\n  );\n};\n\nexport default Card;\n","import React, { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport Card from './Card.js';\n\nconst Main = ({\n  onEditAvatar,\n  onAddPlace,\n  onEditProfile,\n  onCardClick,\n  cards,\n  onCardsLike,\n  onCardsDelete,\n}) => {\n  //Подписываемся на контекст\n  const { name, about, avatar } = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content page__content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-box\">\n          <img\n            src={avatar}\n            alt=\"Фотография аватара\"\n            className=\"profile__avatar\"\n          />\n          <button\n            onClick={onEditAvatar}\n            className=\"profile__edit-avatar-btn\"\n            type=\"button\"\n          >\n            <div className=\"profile__edit-avatar-img\" />\n          </button>\n        </div>\n        <div className=\"profile__profile-info\">\n          <h1 className=\"profile__title-name\">{name}</h1>\n          <button onClick={onEditProfile} className=\"profile__edit-btn\" />\n          <p className=\"profile__subtitle-name\">{about}</p>\n        </div>\n        <button onClick={onAddPlace} className=\"profile__add-button\" />\n      </section>\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {\n            //Перебираем список полученных карточек и возвращаем их в разметку\n            cards.map(card => {\n              return (\n                <Card\n                  onCardClick={onCardClick}\n                  onCardLike={onCardsLike}\n                  onCardDelete={onCardsDelete}\n                  key={card._id}\n                  name={card.name}\n                  link={card.link}\n                  likes={card.likes}\n                  idCard={card._id}\n                  cardOwner={card.owner._id}\n                />\n              );\n            })\n          }\n        </ul>\n      </section>\n    </main>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nconst Footer = _ => {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst PopupWithForm = ({\n  name,\n  title,\n  children,\n  textButton,\n  onClose,\n  isOpen,\n  onSubmit,\n}) => {\n  return (\n    <div\n      className={`modal page__modal modal_target_${name} ${\n        isOpen ? 'modal_active' : '' //Показываем/убираем попап в зависимости от состояния\n      }`}\n    >\n      <div onClick={onClose} className=\"modal__overlay\" />\n      <div className=\"form\">\n        <button\n          className={`form__close-btn form__close-btn_target_${name}`}\n          type=\"button\"\n          onClick={onClose}\n        />\n        <h2 className=\"form__title\">{title}</h2>\n        <form\n          action=\"#\"\n          className={`form__section form__section_target_${name}`}\n          name={name}\n          onSubmit={onSubmit}\n          noValidate\n        >\n          {children}\n          <button className=\"form__submit-btn\" type=\"submit\">\n            {textButton}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PopupWithForm;\n","import React from 'react';\n\n//Попап с увеличенной картинкой\nconst ImagePopup = ({ card, onClose }) => {\n  return (\n    <div\n      className={`modal page__modal modal_target_photoZoom ${\n        card.status ? 'modal_active' : '' //Меняем попап в зависимости от состояния\n      }`}\n    >\n      <div\n        onClick={onClose}\n        className=\"modal__overlay modal__overlay_background_dark\"\n      />\n      <figure className=\"zoom\">\n        <button onClick={onClose} className=\"zoom__close-btn\" type=\"button\" />\n        <img src={card.src} alt=\"\" className=\"zoom__image\" />\n        <figcaption className=\"zoom__text-image\">{card.name}</figcaption>\n      </figure>\n    </div>\n  );\n};\n\nexport default ImagePopup;\n","class Api {\n  constructor(options) {\n    this._serverUrl = options.url;\n    this._headers = options.headers;\n  }\n\n  getInitialCards(cardsUrl) {\n    return fetch(`${this._serverUrl}/${cardsUrl}`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._errorCheck);\n  }\n\n  getProfileInformation() {\n    return fetch(`${this._serverUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._errorCheck);\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._serverUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._errorCheck);\n  }\n\n  updateUserInformation(data) {\n    return fetch(`${this._serverUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._errorCheck);\n  }\n\n  updateUserAvatar(data) {\n    return fetch(`${this._serverUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._errorCheck);\n  }\n\n  removeCard(id) {\n    return fetch(`${this._serverUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._errorCheck);\n  }\n\n  putInformation(id) {\n    return fetch(`${this._serverUrl}/${id}`, {\n      method: 'PUT',\n      headers: this._headers,\n    }).then(this._errorCheck);\n  }\n\n  changeLikeCardStatus(id, checkCard) {\n    if (!checkCard) {\n      return fetch(`${this._serverUrl}/cards/likes/${id}`, {\n        method: 'DELETE',\n        headers: this._headers,\n      }).then(this._errorCheck);\n    } else {\n      return fetch(`${this._serverUrl}/cards/likes/${id}`, {\n        method: 'PUT',\n        headers: this._headers,\n      }).then(this._errorCheck);\n    }\n  }\n\n  _errorCheck(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    'Content-Type': 'application/json',\n    authorization: 'e25f3c22-3477-48f3-a377-dbd53dc14614',\n  },\n});\n\nexport default api;\n","import React, { useState, useContext, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nconst EditProfilePopup = ({ isOpen, onClose, onUpdateUser }) => {\n  const currentUser = useContext(CurrentUserContext);\n  const [userName, setName] = useState({ name: '' });\n  const [description, setDescription] = useState({ about: '' });\n\n  //Заполняем данными из контекста\n  useEffect(\n    _ => {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    },\n    [currentUser]\n  );\n\n  //Получаем данные с инпутов и записываем в стейт\n  const handleChangeName = evt => {\n    const targetName = evt.target.value;\n    setName(targetName);\n  };\n\n  const handleChangeDescription = evt => {\n    const targetAbout = evt.target.value;\n    setDescription(targetAbout);\n  };\n\n  //По субмиту передаем данные инпутов в api\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onUpdateUser({ name: userName, about: description });\n  };\n\n  return (\n    <PopupWithForm\n      onClose={onClose}\n      isOpen={isOpen}\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      textButton=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          type=\"text\"\n          className=\"form__input form__input_field_name\"\n          id=\"input-name\"\n          placeholder=\"Имя\"\n          name=\"profileName\"\n          required\n          minLength=\"2\"\n          maxLength=\"40\"\n          value={userName || ''}\n          onChange={handleChangeName}\n        />\n        <span className=\"form__input-error\" id=\"input-name-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input\n          type=\"text\"\n          className=\"form__input form__input_field_about\"\n          id=\"input-about\"\n          placeholder=\"О себе\"\n          name=\"about\"\n          required\n          minLength=\"2\"\n          maxLength=\"200\"\n          value={description || ''}\n          onChange={handleChangeDescription}\n        />\n        <span className=\"form__input-error\" id=\"input-about-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n};\n\nexport default EditProfilePopup;\n","import React, { useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditAvatarPopup = ({ isOpen, onClose, onUpdateAvatar }) => {\n  const urlRef = useRef('');\n\n  //Действие при субмите для отправки ссылки на автар к api\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onUpdateAvatar({ avatar: urlRef.current.value });\n  };\n\n  return (\n    <PopupWithForm\n      onClose={onClose}\n      isOpen={isOpen}\n      onSubmit={handleSubmit}\n      name=\"profile-avatar\"\n      title=\"Обновить автар\"\n      textButton=\"Сохранить\"\n    >\n      <label className=\"form__field\">\n        <input\n          className=\"form__input form__input_field_avatar\"\n          id=\"avatar-input\"\n          placeholder=\"Ссылка на картинку\"\n          name=\"pictureSource\"\n          type=\"URL\"\n          ref={urlRef}\n          required\n        />\n        <span className=\"form__input-error\" id=\"avatar-input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n};\n\nexport default EditAvatarPopup;\n","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst AddPlacePopup = ({ isOpen, onClose, onCardAdd }) => {\n  const [cardName, setCardName] = useState('');\n  const [cardLink, setCardLink] = useState('');\n  // const [textButton, setTextButton] = useState('Создать');\n\n  //Получаем значения инпутов и кладем в стейт\n  const handleChangeName = evt => {\n    const cardNameValue = evt.target.value;\n    setCardName(cardNameValue);\n  };\n\n  const handleChangeLink = evt => {\n    const cardLinkValue = evt.target.value;\n    setCardLink(cardLinkValue);\n  };\n\n  //По субмиту передаем в api и обнуляем стейт\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onCardAdd({ name: cardName, link: cardLink });\n    setCardLink('');\n    setCardName('');\n  };\n\n  return (\n    <PopupWithForm\n      onClose={onClose}\n      isOpen={isOpen}\n      name=\"addCard\"\n      title=\"Новое место\"\n      textButton=\"Создать\"\n      onSubmit={handleSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          type=\"text\"\n          className=\"form__input form__input_field_title\"\n          id=\"title-input\"\n          placeholder=\"Название\"\n          name=\"name\"\n          minLength=\"1\"\n          maxLength=\"30\"\n          required\n          value={cardName || ''}\n          onChange={handleChangeName}\n        />\n        <span className=\"form__input-error\" id=\"title-input-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input\n          className=\"form__input form__input_field_src\"\n          id=\"src-input\"\n          placeholder=\"Ссылка на картинку\"\n          name=\"link\"\n          type=\"URL\"\n          required\n          value={cardLink || ''}\n          onChange={handleChangeLink}\n        />\n        <span className=\"form__input-error\" id=\"src-input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n};\n\nexport default AddPlacePopup;\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup';\n\nconst App = _ => {\n  //Задаем состояния компонента\n  const [isEditProfilePopupOpen, setProfileStatus] = useState(false);\n  const [isAddPlacePopupOpen, setPlaceStatus] = useState(false);\n  const [isEditAvatarPopupOpen, setAvatarStatus] = useState(false);\n  const [isConfirmPopupOpen, setConfirmStatus] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [currentCardId, setCurrentCardId] = useState('');\n  const [cards, setCards] = useState([]);\n\n  //Берем данные профайла для контекста\n  useEffect(_ => {\n    api\n      .getProfileInformation()\n      .then(userData => {\n        setCurrentUser(userData);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  //Запрос к API для получения карточек\n  useEffect(_ => {\n    const getCards = api.getInitialCards('cards');\n    getCards\n      .then(dataCard => {\n        setCards(dataCard);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  //Изменения состояния для закрытия попапов\n  const closeAllPopups = _ => {\n    setAvatarStatus(false);\n    setPlaceStatus(false);\n    setProfileStatus(false);\n    setSelectedCard(false);\n    setConfirmStatus(false);\n  };\n\n  //Функция для открытия увеличенной карточки по клику\n  const handleCardClick = ({ link, name }) => {\n    setSelectedCard({ status: true, src: link, name: name });\n  };\n\n  //Проверяем лайки, меняем статус запросом к api и создаем новый массив карточек в стейт\n  const handleCardLike = ({ likes, idCard }) => {\n    const isLiked = likes.some(like => like._id === currentUser._id);\n    api\n      .changeLikeCardStatus(idCard, !isLiked)\n      .then(newCard => {\n        const newCards = cards.map(singleCard =>\n          singleCard._id === idCard ? newCard : singleCard\n        );\n        setCards(newCards);\n      })\n      .catch(err => console.log(err));\n  };\n\n  //Удаление карточки запрос к api и обновление стейта\n  const handleCardDelete = _ => {\n    api\n      .removeCard(currentCardId)\n      .then(data => {\n        const newCardList = cards.filter(card => currentCardId !== card._id);\n        setCards(newCardList);\n        setConfirmStatus(false);\n      })\n      .catch(err => console.log(err));\n  };\n\n  //Спасибо за труд! Счастья, радости, печенек!:)\n\n  //Запрос к Api для изменения аватара\n  const handleUpdateAvatar = ({ avatar }) => {\n    api\n      .updateUserAvatar({ avatar })\n      .then(UserData => {\n        setCurrentUser(UserData);\n        setAvatarStatus(false);\n      })\n      .catch(err => console.log(err));\n  };\n\n  //Запрос к api для изменения профайла\n  const handleUpdateUser = ({ name, about }) => {\n    api\n      .updateUserInformation({ name, about })\n      .then(UserData => {\n        setCurrentUser(UserData);\n        setProfileStatus(false);\n      })\n      .catch(err => console.log(err));\n  };\n\n  //Запрос к api для добавления карточки\n  const handleAddPlaceSubmit = ({ name, link }) => {\n    api\n      .addNewCard({ name, link })\n      .then(newCard => {\n        setCards([...cards, newCard]);\n        setPlaceStatus(false);\n      })\n      .catch(err => console.log(err));\n  };\n\n  //Функции изменения состояния для открытия попапов\n  const handleEditAvatarClick = _ => {\n    setAvatarStatus(true);\n  };\n  const handleEditProfileClick = _ => {\n    setProfileStatus(true);\n  };\n  const handleAddPlaceClick = _ => {\n    setPlaceStatus(true);\n  };\n  const handleConfirmClick = cardId => {\n    setCurrentCardId(cardId);\n    setConfirmStatus(true);\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header />\n          <Main\n            onCardClick={handleCardClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardsLike={handleCardLike}\n            onCardsDelete={handleConfirmClick}\n            cards={cards}\n          />\n          <Footer />\n        </div>\n\n        {/* Попап профайла */}\n        <EditProfilePopup\n          onUpdateUser={handleUpdateUser}\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n        />\n\n        {/* Попап добавления новых карточек */}\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onCardAdd={handleAddPlaceSubmit}\n        />\n\n        {/* Попап редактирования аватара */}\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        {/* Попап подтверждения действий */}\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          textButton=\"Да\"\n          onClose={closeAllPopups}\n          isOpen={isConfirmPopupOpen}\n          onSubmit={handleCardDelete}\n        />\n\n        {/* Попап увеличенной картинки  */}\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/vector.c6f11019.svg\";"],"sourceRoot":""}