{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/vector.svg"],"names":["Header","className","src","logo","alt","api","options","this","_serverUrl","url","_headers","headers","cardsUrl","fetch","method","then","_errorCheck","profileUrl","data","urlCard","body","JSON","stringify","id","res","ok","json","Promise","reject","status","authorization","Card","link","likes","name","onCardClick","type","onClick","Main","onEditAvatar","onAddPlace","onEditProfile","useState","userAvatar","setAvatar","userDescription","setDescription","userName","setUserName","cards","setCards","useEffect","getProfileInformation","avatar","about","catch","err","console","log","getInitialCards","dataCard","map","_id","card","key","length","Footer","PopupWithForm","title","children","textButton","onClose","isOpen","action","noValidate","ImagePopup","App","isEditProfilePopupOpen","setProfileStatus","isAddPlacePopupOpen","setPlaceStatus","isEditAvatarPopupOpen","setAvatarStatus","selectedCard","setSelectedCard","closeAllPopups","placeholder","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.f2318dba.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../images/vector.svg\";\n\nfunction Header() {\n  return (\n    <header className=\"header page__header\">\n      <img src={logo} alt=\"Логотип место Россия\" className=\"header__logo\" />\n    </header>\n  );\n}\nexport default Header;\n","class Api {\n  constructor(options) {\n    this._serverUrl = options.url;\n    this._headers = options.headers;\n  }\n\n  getInitialCards(cardsUrl) {\n    return fetch(`${this._serverUrl}/${cardsUrl}`, {\n        method: \"GET\",\n        headers: this._headers\n      })\n      .then(this._errorCheck);\n  }\n\n  getProfileInformation(profileUrl) {\n    return fetch(`${this._serverUrl}/${profileUrl}`, {\n        method: \"GET\",\n        headers: this._headers\n      })\n      .then(this._errorCheck);\n  }\n\n  addNewInformation(data, urlCard) {\n    return fetch(`${this._serverUrl}/${urlCard}`, {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify(data)\n      })\n      .then(this._errorCheck);\n  }\n\n  updateInformation(data, url) {\n    return fetch(`${this._serverUrl}/${url}`, {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify(data)\n      })\n      .then(this._errorCheck);\n  }\n\n  removeCard(id) {\n    return fetch(`${this._serverUrl}/cards/${id}`, {\n        method: \"DELETE\",\n        headers: this._headers,\n      })\n      .then(this._errorCheck);\n  }\n\n  putInformation(id) {\n    return fetch(`${this._serverUrl}/${id}`, {\n        method: \"PUT\",\n        headers: this._headers,\n      })\n      .then(this._errorCheck);\n  }\n\n  putLike(id) {\n    return fetch(`${this._serverUrl}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    })\n    .then(this._errorCheck);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._serverUrl}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._errorCheck);\n  }\n\n  _errorCheck(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    'Content-Type': 'application/json',\n    authorization: 'e25f3c22-3477-48f3-a377-dbd53dc14614'\n  }\n});\n\nexport default api;\n","import React from \"react\";\n\nfunction Card({ link, likes, name, onCardClick }) {\n  //Функция открытия картинки по клику\n  const handleCardClick = () => {\n    onCardClick({link, name});\n  };\n\n  return (\n    <>\n      <li className=\"elements__item\">\n        <button className=\"elements__trash\" type=\"button\" />\n        <figure className=\"elements__item-card\">\n          <img\n            onClick={handleCardClick}\n            src={link}\n            alt={name}\n            className=\"elements__image\"\n          />\n          <figcaption className=\"elements__image-content-box\">\n            <p className=\"elements__image-description\">{name}</p>\n            <div className=\"elements__like-button-box\">\n              <button className=\"elements__like\" />\n              <span className=\"elements__like-counter\">{likes}</span>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n    </>\n  );\n}\n\nexport default Card;\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../utils/Api.js\";\nimport Card from \"./Card.js\";\n\nfunction Main({ onEditAvatar, onAddPlace, onEditProfile, onCardClick }) {\n  //Задаем состояния компонента\n  const [userAvatar, setAvatar] = useState(\"\");\n  const [userDescription, setDescription] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n\n  //Делаем запрос к API для получениия данных пользователя\n  useEffect(() => {\n    const profileInfo = api.getProfileInformation(\"users/me\");\n    profileInfo\n      .then(({ avatar, about, name }) => {\n        setAvatar(avatar);\n        setDescription(about);\n        setUserName(name);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  //Запрос к API для получения карточек\n  useEffect(() => {\n    const getCards = api.getInitialCards(\"cards\");\n    getCards\n      .then((dataCard) => {\n        setCards(dataCard);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <main className=\"content page__content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-box\">\n          <img\n            src={userAvatar}\n            alt=\"Фотография аватара\"\n            className=\"profile__avatar\"\n          />\n          <button\n            onClick={onEditAvatar}\n            className=\"profile__edit-avatar-btn\"\n            type=\"button\"\n          >\n            <div className=\"profile__edit-avatar-img\" />\n          </button>\n        </div>\n        <div className=\"profile__profile-info\">\n          <h1 className=\"profile__title-name\">{userName}</h1>\n          <button onClick={onEditProfile} className=\"profile__edit-btn\" />\n          <p className=\"profile__subtitle-name\">{userDescription}</p>\n        </div>\n        <button onClick={onAddPlace} className=\"profile__add-button\" />\n      </section>\n      <section className=\"elements\">\n        <ul className=\"elements__list\">\n          {\n            //Перебираем список полученных карточек и возвращаем их в разметку\n            cards.map(({link, name, likes, _id}) => {\n              return (\n                <Card\n                  card={{link, name}}\n                  onCardClick={onCardClick}\n                  key={_id}\n                  name={name}\n                  link={link}\n                  likes={likes.length}\n                />\n              );\n            })\n          }\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction PopupWithForm({ name, title, children, textButton, onClose, isOpen }) {\n  return (\n    <div\n      className={`modal page__modal modal_target_${name} ${\n        isOpen ? \"modal_active\" : \"\" //Показываем/убираем попап в зависимости от состояния\n      }`}\n    >\n      <div onClick={onClose} className=\"modal__overlay\" />\n      <div className=\"form\">\n        <button\n          className={`form__close-btn form__close-btn_target_${name}`}\n          type=\"button\"\n          onClick={onClose}\n        />\n        <h2 className=\"form__title\">{title}</h2>\n        <form\n          action=\"#\"\n          className={`form__section form__section_target_${name}`}\n          name={name}\n          noValidate\n        >\n          {children}\n          <button className=\"form__submit-btn\" type=\"submit\">\n            {textButton}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\n\n//Попап с увеличенной картинкой\nfunction ImagePopup({ card, onClose }) {\n  return (\n    <div\n      className={`modal page__modal modal_target_photoZoom ${\n        card.status ? \"modal_active\" : \"\" //Меняем попап в зависимости от состояния\n      }`}\n    >\n      <div\n        onClick={onClose}\n        className=\"modal__overlay modal__overlay_background_dark\"\n      />\n      <figure className=\"zoom\">\n        <button onClick={onClose} className=\"zoom__close-btn\" type=\"button\" />\n        <img src={card.src} alt=\"\" className=\"zoom__image\" />\n        <figcaption className=\"zoom__text-image\">{card.name}</figcaption>\n      </figure>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React, { useState } from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\n\nfunction App() {\n  //Задаем состояния компонента\n  const [isEditProfilePopupOpen, setProfileStatus] = useState(false);\n  const [isAddPlacePopupOpen, setPlaceStatus] = useState(false);\n  const [isEditAvatarPopupOpen, setAvatarStatus] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n\n  //Функция для открытия увеличенной карточки по клику\n  const handleCardClick = ({ link, name }) => {\n    setSelectedCard({ status: true, src: link, name: name });\n  };\n\n  //Функции изменения состояния для открытия попапов\n  const handleEditAvatarClick = () => {\n    setAvatarStatus(true);\n  };\n  const handleEditProfileClick = () => {\n    setProfileStatus(true);\n  };\n  const handleAddPlaceClick = () => {\n    setPlaceStatus(true);\n  };\n\n  //Изменения состояния для закрытия попапов\n  const closeAllPopups = () => {\n    setAvatarStatus(false);\n    setPlaceStatus(false);\n    setProfileStatus(false);\n    setSelectedCard(false);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page__container\">\n        <Header />\n        <Main\n          onCardClick={handleCardClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n        />\n        <Footer />\n      </div>\n\n      {/* Попап профайла */}\n      <PopupWithForm\n        onClose={closeAllPopups}\n        isOpen={isEditProfilePopupOpen}\n        name=\"profile\"\n        title=\"Редактировать профиль\"\n        textButton=\"Сохранить\"\n      >\n        <label className=\"form__field\">\n          <input\n            type=\"text\"\n            className=\"form__input form__input_field_name\"\n            id=\"input-name\"\n            placeholder=\"Имя\"\n            name=\"profileName\"\n            required\n            minLength=\"2\"\n            maxLength=\"40\"\n          />\n          <span className=\"form__input-error\" id=\"input-name-error\"></span>\n        </label>\n        <label className=\"form__field\">\n          <input\n            type=\"text\"\n            className=\"form__input form__input_field_about\"\n            id=\"input-about\"\n            placeholder=\"О себе\"\n            name=\"about\"\n            required\n            minLength=\"2\"\n            maxLength=\"200\"\n          />\n          <span className=\"form__input-error\" id=\"input-about-error\"></span>\n        </label>\n      </PopupWithForm>\n\n      {/* Попап добавления новых карточек */}\n      <PopupWithForm\n        onClose={closeAllPopups}\n        isOpen={isAddPlacePopupOpen}\n        name=\"addCard\"\n        title=\"Новое место\"\n        textButton=\"Создать\"\n      >\n        <label className=\"form__field\">\n          <input\n            type=\"text\"\n            className=\"form__input form__input_field_title\"\n            id=\"title-input\"\n            placeholder=\"Название\"\n            name=\"name\"\n            minLength=\"1\"\n            maxLength=\"30\"\n            required\n          />\n          <span className=\"form__input-error\" id=\"title-input-error\"></span>\n        </label>\n        <label className=\"form__field\">\n          <input\n            className=\"form__input form__input_field_src\"\n            id=\"src-input\"\n            placeholder=\"Ссылка на картинку\"\n            name=\"link\"\n            type=\"URL\"\n            required\n          />\n          <span className=\"form__input-error\" id=\"src-input-error\"></span>\n        </label>\n      </PopupWithForm>\n\n      {/* Попап редактирования аватара */}\n      <PopupWithForm\n        onClose={closeAllPopups}\n        isOpen={isEditAvatarPopupOpen}\n        name=\"profile-avatar\"\n        title=\"Обновить автар\"\n        textButton=\"Сохранить\"\n      >\n        <label className=\"form__field\">\n          <input\n            className=\"form__input form__input_field_avatar\"\n            id=\"avatar-input\"\n            placeholder=\"Ссылка на картинку\"\n            name=\"pictureSource\"\n            type=\"URL\"\n            required\n          />\n          <span className=\"form__input-error\" id=\"avatar-input-error\"></span>\n        </label>\n      </PopupWithForm>\n\n      {/* Попап подтверждения действий */}\n      <PopupWithForm name=\"confirm\" title=\"Вы уверены?\" textButton=\"Да\" />\n\n      {/* Попап увеличенной картинки  */}\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/vector.c6f11019.svg\";"],"sourceRoot":""}